/* Generated from config.h.in during build configuration using CMake. */

// Note: This header file is only used internally. It is not part of public
// interface!

#ifndef JFLAGS_CONFIG_H_
#define JFLAGS_CONFIG_H_

// ---------------------------------------------------------------------------
// System checks

// Define if you build this library for a MS Windows OS.
#cmakedefine OS_WINDOWS

// Define if you have the <stdint.h> header file.
#cmakedefine HAVE_STDINT_H

// Define if you have the <sys/types.h> header file.
#cmakedefine HAVE_SYS_TYPES_H

// Define if you have the <inttypes.h> header file.
#cmakedefine HAVE_INTTYPES_H

// Define if you have the <sys/stat.h> header file.
#cmakedefine HAVE_SYS_STAT_H

// Define if you have the <unistd.h> header file.
#cmakedefine HAVE_UNISTD_H

// Define if you have the <fnmatch.h> header file.
#cmakedefine HAVE_FNMATCH_H

// Define if you have the <shlwapi.h> header file (Windows 2000/XP).
#cmakedefine HAVE_SHLWAPI_H

// Define if you have the strtoll function.
#cmakedefine HAVE_STRTOLL

// Define if you have the strtoq function.
#cmakedefine HAVE_STRTOQ

// Define if you have the <pthread.h> header file.
#cmakedefine HAVE_PTHREAD

// Define if your pthread library defines the type pthread_rwlock_t
#cmakedefine HAVE_RWLOCK

// gcc requires this to get PRId64, etc.
#if defined(HAVE_INTTYPES_H) && !defined(__STDC_FORMAT_MACROS)
#define __STDC_FORMAT_MACROS 1
#endif

// ---------------------------------------------------------------------------
// Package information

// Name of package.
#define PACKAGE @PROJECT_NAME@

// Define to the full name of this package.
#define PACKAGE_NAME @PACKAGE_NAME@

// Define to the full name and version of this package.
#define PACKAGE_STRING @PACKAGE_STRING@

// Define to the one symbol short name of this package.
#define PACKAGE_TARNAME @PACKAGE_TARNAME@

// Define to the version of this package.
#define PACKAGE_VERSION @PACKAGE_VERSION@

// Version number of package.
#define VERSION PACKAGE_VERSION

// Define to the address where bug reports for this package should be sent.
#define PACKAGE_BUGREPORT @PACKAGE_BUGREPORT@

// ---------------------------------------------------------------------------
// Path separator
#ifndef PATH_SEPARATOR
#ifdef OS_WINDOWS
#define PATH_SEPARATOR '\\'
#else
#define PATH_SEPARATOR '/'
#endif
#endif

// ---------------------------------------------------------------------------
// Windows

// Whether jflags library is a DLL.
#ifndef JFLAGS_IS_A_DLL
#define JFLAGS_IS_A_DLL 0
#endif

// Always export symbols when compiling a shared library as this file is only
// included by internal modules when building the jflags library itself.
// The jflags_declare.h header file will set it to import these symbols
// otherwise.
#ifndef JFLAGS_DLL_DECL
#if JFLAGS_IS_A_DLL && defined(_MSC_VER)
#define JFLAGS_DLL_DECL __declspec(dllexport)
#else
#define JFLAGS_DLL_DECL
#endif
#endif
// Flags defined by the jflags library itself must be exported
#ifndef JFLAGS_DLL_DEFINE_FLAG
#define JFLAGS_DLL_DEFINE_FLAG JFLAGS_DLL_DECL
#endif

#ifdef OS_WINDOWS
// The unittests import the symbols of the shared jflags library
#if JFLAGS_IS_A_DLL && defined(_MSC_VER)
#define JFLAGS_DLL_DECL_FOR_UNITTESTS __declspec(dllimport)
#endif
#include "windows_port.h"
#endif

#endif // JFLAGS_CONFIG_H_
